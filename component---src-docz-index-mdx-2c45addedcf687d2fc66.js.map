{"version":3,"sources":["webpack:///../src/__docz__/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","display","alignItems","href","target","rel","src","githubSvg","size","margin","parentName","demoGif","isMDXComponent"],"mappings":"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","file":"component---src-docz-index-mdx-2c45addedcf687d2fc66.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-window-sessionstorage/react-use-window-sessionstorage/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { SvgIcon } from '@devboldly/react-devboldly-tools';\nimport githubSvg from '../__docz__/images/github.svg';\nimport demoGif from '../__docz__/images/demo.gif';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <div style={{\n      display: 'flex',\n      alignItems: 'center'\n    }}>\n  <div>\n    <h1>React Use Window.sessionStorage</h1>\n  </div>\n  <div>\n    <a href=\"https://github.com/devboldly/react-use-window-sessionstorage/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <SvgIcon src={githubSvg} size={28} style={{\n            margin: '0 0 0 20px'\n          }} mdxType=\"SvgIcon\" />\n    </a>\n  </div>\n    </div>\n    <p><strong parentName=\"p\">{`React hooks for accessing the sessionStorage `}<a parentName=\"strong\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API\"\n        }}>{`Web Storage API`}</a>{`.`}</strong></p>\n    <a href=\"https://devboldly.github.io/react-use-window-sessionstorage/useSessionStorageString#example\"><img src={demoGif} /></a>\n    <p>{`👁️ `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"/react-use-window-sessionstorage/useSessionStorageString#example\"\n        }}>{`Live Demo`}</a></strong></p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`A set of hooks to easily store and retrieve data from `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\"\n      }}>{`sessionStorage`}</a>{`.`}</p>\n    <p>{`Encoding is handled for common data types, including `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageBoolean\"\n      }}>{`booleans`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageNumber\"\n      }}>{`numbers`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageString\"\n      }}>{`strings`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageObject\"\n      }}>{`objects`}</a>{`, or you can `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageItem\"\n      }}>{`encode data yourself`}</a>{` if you'd like.`}</p>\n    <p>{`Changes to sessionStorage are synchronized across all hooks automatically.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`What is sessionStorage?`}</strong>{` The `}<inlineCode parentName=\"p\">{`sessionStorage`}</inlineCode>{` property allows you to store `}<inlineCode parentName=\"p\">{`{key: value}`}</inlineCode>{` string data that is cleared when the page session ends. A page session lasts as long as the browser is open, and survives over page reloads and restores.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For localStorage, check out the companion project `}<a parentName=\"p\" {...{\n          \"href\": \"https://devboldly.github.io/react-use-window-localstorage\"\n        }}>{`react-use-window-localstorage`}</a>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"features-include\"\n    }}>{`Features include:`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`💪 Easily add `}<inlineCode parentName=\"strong\">{`sessionStorage`}</inlineCode>{` support`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Easily store data that is cleared when the page session ends.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`🔢 Support for primitives and objects`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Store and retrieve strings, booleans, numbers, and objects effortlessly.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`💁 Default values`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Optional support for defaults is baked right in.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`🔄 Automatic synchronization`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Changes are synchronized across hooks automatically.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`👾 Customizable`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Want to store something unusual? Just provide your own encoder.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`⛔ Storage availability detection`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Detects if `}<inlineCode parentName=\"li\">{`sessionStorage`}</inlineCode>{` is available for use and lets you know otherwise.`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`🧼 Clearing support`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\">{`Clear all sessionStorage values and reset hooks to defaults with one simple call.`}</li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`npm i react-use-window-sessionstorage\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick Start`}</h2>\n    <h3 {...{\n      \"id\": \"storing-strings\"\n    }}>{`Storing Strings`}</h3>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageString\"\n      }}>{`useSessionStorageString`}</a>{` hook:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useSessionStorageString } from 'react-use-window-sessionstorage';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const defaultValue = 'cyan';\nconst [value, setValue] = useSessionStorageString('favColor', defaultValue);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"storing-objects\"\n    }}>{`Storing Objects`}</h3>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageObject\"\n      }}>{`useSessionStorageObject`}</a>{` hook:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useSessionStorageObject } from 'react-use-window-sessionstorage';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const defaultValue = { a: 'hello', b: 123 };\nconst [value, setValue] = useSessionStorageObject('myObj', defaultValue);\n`}</code></pre>\n    <p>{`Note that your objects must be compatible with `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\"\n      }}>{`JSON.stringify()`}</a>{`. Use `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageItem\"\n      }}>{`useSessionStorageItem`}</a>{` otherwise.`}</p>\n    <h3 {...{\n      \"id\": \"storing-booleans\"\n    }}>{`Storing Booleans`}</h3>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageBoolean\"\n      }}>{`useSessionStorageBoolean`}</a>{` hook:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useSessionStorageBoolean } from 'react-use-window-sessionstorage';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const defaultValue = true;\nconst [value, setValue] = useSessionStorageBoolean('swordEquipped', defaultValue);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"storing-numbers\"\n    }}>{`Storing Numbers`}</h3>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageNumber\"\n      }}>{`useSessionStorageNumber`}</a>{` hook:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useSessionStorageNumber } from 'react-use-window-sessionstorage';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const defaultValue = 3.14159;\nconst [value, setValue] = useSessionStorageNumber('importantNumber', defaultValue);\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: All value defaults are optional. Hooks will return `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if none is provided.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"storing-everything-else\"\n    }}>{`Storing Everything Else`}</h3>\n    <p>{`If you'd like to store something other than the data types above, define your own encoding using the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-window-sessionstorage/useSessionStorageItem\"\n      }}>{`useSessionStorageItem`}</a>{` hook.`}</p>\n    <p>{`Here's a starting point:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useSessionStorageItem } from 'react-use-window-sessionstorage';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const defaultValue = 'something custom';\nconst encode = value => JSON.stringify(value);\nconst decode = itemString => JSON.parse(itemString);\nconst [value, setValue] = useSessionStorageItem('name', defaultValue, encode, decode);\n`}</code></pre>\n    <p>{`Provide `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` for no default value.`}</p>\n    <h3 {...{\n      \"id\": \"additional-features\"\n    }}>{`Additional Features`}</h3>\n    <p>{`All hooks provide additional features in their return arrays, should you be interested:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const [value, setValue, loading, available, reset, restore] = useSessionStorageString('favColor', 'cyan');\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`loading`}</inlineCode>{` value of `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` indicates that the value is being loaded from sessionStorage.`}</li>\n      <li parentName=\"ul\">{`An `}<inlineCode parentName=\"li\">{`available`}</inlineCode>{` value of `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` indicates that `}<inlineCode parentName=\"li\">{`sessionStorage`}</inlineCode>{` is supported and available for use. `}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`reset()`}</inlineCode>{` function sets the value back to the provided default, or `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` if none was given.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`restore()`}</inlineCode>{` function retrieves the latest value from sessionStorage. Use this if the sessionStorage value changes outside of this hook and you need to restore it to the latest.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"clearing-sessionstorage\"\n    }}>{`Clearing `}<inlineCode parentName=\"h3\">{`sessionStorage`}</inlineCode></h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useClear } from 'react-use-window-sessionstorage';\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const clearSessionStorage = useClearSessionStorage();\n`}</code></pre>\n    <p>{`Call `}<inlineCode parentName=\"p\">{`clearSessionStorage()`}</inlineCode>{` to clear all values in sessionStorage using `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\"\n      }}>{`sessionStorage.clear()`}</a>{`\nand reset all hooks to their defaults (or `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{` if none provided).`}</p>\n    <h2 {...{\n      \"id\": \"typescript\"\n    }}>{`TypeScript`}</h2>\n    <p>{`Type definitions have been included for `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.typescriptlang.org/\"\n      }}>{`TypeScript`}</a>{` support.`}</p>\n    <h2 {...{\n      \"id\": \"contributing\"\n    }}>{`Contributing`}</h2>\n    <p>{`Open source software is awesome and so are you. 😎`}</p>\n    <p>{`Feel free to submit a pull request for bugs or additions, and make sure to update tests as appropriate. If you find a mistake in the docs, send a PR! Even the smallest changes help.`}</p>\n    <p>{`For major changes, open an issue first to discuss what you'd like to change.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://tinyurl.com/kindlingscripts\"\n      }}>{`Kindling`}</a>{` for npm script documentation.`}</p>\n    <h2 {...{\n      \"id\": \"-found-it-helpful-star-it\"\n    }}>{`⭐ Found It Helpful? `}<a parentName=\"h2\" {...{\n        \"href\": \"https://github.com/devboldly/react-use-window-sessionstorage/stargazers\"\n      }}>{`Star It!`}</a></h2>\n    <p>{`If you found this project helpful, let the community know by giving it a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/devboldly/react-use-window-sessionstorage/stargazers\"\n      }}>{`star`}</a>{`: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/devboldly/react-use-window-sessionstorage/stargazers\"\n      }}>{`👉⭐`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}